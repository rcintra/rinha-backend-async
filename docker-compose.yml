version: '3.5'
name: 'rinha-de-backend'

services:
  spring-api1: # API - Instância 01
    build: .
    hostname: spring-api1
    environment:
      - SERVER_PORT=8080
      - DATABASE_URL=jdbc:postgresql://db-postgresql:5432/rinhadb
      - DATABASE_USERNAME=rinha
      - DATABASE_PASSWORD=rinha123
    depends_on:
      - db-postgresql
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '1GB'
    networks:
      - app-network

  spring-api2: # API - Instância 01
    build: .
    hostname: spring-api2
    environment:
      - SERVER_PORT=8080
      - DATABASE_URL=jdbc:postgresql://db-postgresql:5432/rinhadb
      - DATABASE_USERNAME=rinha
      - DATABASE_PASSWORD=rinha123
    depends_on:
      - db-postgresql
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '1GB'
    networks:
      - app-network

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - spring-api1
      - spring-api2
    ports:
      - "9999:9999"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '1GB'

  db-postgresql: # Banco de dados
    image: postgres:latest
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha123
      POSTGRES_DB: rinhadb
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
    app-network: